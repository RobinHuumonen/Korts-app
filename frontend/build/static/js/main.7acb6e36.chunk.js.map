{"version":3,"sources":["components/Home/resources/collections.svg","components/Home/resources/arrowRight.svg","components/Home/resources/arrowLeft.svg","components/Home/resources/add_plus.svg","components/Home/resources/add_minus.svg","reducers/notification.js","services/user.js","reducers/signUp.js","services/stack.js","reducers/stack.js","services/login.js","reducers/user.js","store.js","registerServiceWorker.js","components/LinkButton.js","components/Button.js","components/Headings.js","components/About/TopContainer.js","components/About/MainContainer.js","components/Footer.js","components/About/AboutPage.js","components/UserForm.js","components/SignUp/MainContainer.js","components/Notification.js","components/SignUp/SignUpPage.js","components/LogIn/SignUp.js","components/LogIn/MainContainer.js","components/LogIn/LogInPage.js","components/Home/TopContainer.js","components/Home/Crud.js","components/Home/Card.js","components/Home/Collections.js","components/Home/Stacks.js","components/Home/VoteNavigation.js","components/Home/MainContainer.js","components/Home/HomePage.js","App.js","index.js"],"names":["module","exports","timeoutId","getUsers","id","a","axios","get","req","data","getAll","then","res","signUp","newUser","post","setNotification","content","time","dispatch","type","clearTimeout","window","scrollTo","setTimeout","reducer","state","action","onSignUp","object","userService","console","log","message","token","update","newObject","config","headers","Authorization","put","create","setToken","newToken","nullToken","remove","delete","updateStack","currentStack","updatedCard","dataToServer","stack","flashcard","hint","answer","plusses","minuses","filter","s","map","login","credentials","onLogOut","localStorage","removeItem","onLogIn","loginData","user","setItem","JSON","stringify","username","loggedUser","combineReducers","userReducer","signUpUser","signUpReducer","stacks","stacksReducer","notification","notificationReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","withRouter","props","history","to","onClick","className","text","event","push","Button","handleClick","H1","H1LinkExport","TopContainer","useDispatch","MainContainer","src","collections","alt","Footer","Date","getFullYear","AboutPage","UserForm","passwordHint","usernameHint","password","buttonText","submitHandler","usernameHandler","passwordHandler","onSubmit","placeholder","value","onChange","useState","setUsername","setPassword","handleSignUp","preventDefault","length","Error","target","Notification","SignUpPage","SignUp","handleLogin","LogInPage","Crud","getStackName","stackIndex","stackName","setStackName","rename","createStack","cardHint","cardAnswer","addCardToStack","deleteStack","Card","stopPropagation","showAnswer","flipCard","getCardInfo","cardIndex","setCardAnswer","setCardHint","Collections","height","width","toggleRenderCollections","Stacks","setStack","key","VoteNavigation","arrowLeft","previousCard","addPlus","votePlus","getPlusses","addMinus","voteMinus","getMinuses","arrowRight","nextCard","setStackIndex","setCardIndex","renderStacks","setRenderStacks","setShowAnswer","index","i","getStack","find","findIndex","duplicatesExist","updatedStack","oldName","renameStack","stackAndCard","newCard","flashcards","removeStack","HomePage","App","useEffect","parse","getItem","useSelector","initStacks","path","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7acb6e36.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/collections.8bc3ec76.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrowRight.d53f0580.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrowLeft.7cf0594b.svg\";","module.exports = __webpack_public_path__ + \"static/media/add_plus.daf58e2f.svg\";","module.exports = __webpack_public_path__ + \"static/media/add_minus.3aab6814.svg\";","const reducer = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_NOTIFICATION':\n      return action.content\n    case 'CLEAR_NOTIFICATION':\n      return null\n    default: \n      return state\n  }\n}\n\nlet timeoutId \n\nexport const setNotification = (content, time) => {\n  return async dispatch => {\n    dispatch({\n      type: 'SET_NOTIFICATION',\n      content\n    })\n\n    if (timeoutId) {\n      clearTimeout(timeoutId)\n    }\n\n    window.scrollTo(0, 0)\n\n\n    timeoutId = setTimeout(() => {\n      dispatch({\n        type: 'CLEAR_NOTIFICATION'\n      })\n    }, time * 1000)\n  }\n}\n\nexport const clearNotification = (id) => (\n  { type: 'CLEAR_NOTIFICATION' }\n)\n\nexport default reducer","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst getAll = () => {\n  const req = axios.get(baseUrl)\n  return req.then(res => res.data)\n}\n\nconst getUsers = async (id) => {\n  const req = await axios.get(`${baseUrl}/${id}`)\n  return req.data\n}\n\nconst signUp = async (newUser) => {\n  const res = await axios.post(baseUrl, newUser)\n  return res.data\n}\n\nexport default { getUsers, getAll, signUp }","import userService from '../services/user'\nimport { setNotification } from './notification'\n\nconst reducer = (state = null, action) => {\n  switch (action.type) {\n    case 'NULL_SIGN_UP_USER':\n      return null\n    case 'ON_SIGNUP':\n      return action.newUser\n    default:\n      return state\n  }\n}\n\nexport const setNewUserNull = () => {\n  return {\n    type: 'NULL_SIGN_UP_USER',\n  }\n}\n\nexport const onSignUp = (object) => {\n  return async dispatch => {\n    try {\n      const newUser = await userService.signUp(object)\n      dispatch({\n        type: 'ON_SIGNUP',\n        newUser\n      })\n    } catch (error) {\n      console.log(error.message);\n      dispatch(setNotification(error.message, 5))\n    }\n  }\n\n}\n\n\n\nexport default reducer","import axios from 'axios'\nconst baseUrl = '/api/stacks'\n\nlet token = null\n\nconst nullToken = () => {\n  token = null\n}\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\n\nconst getAll = () => {\n  const req = axios.get(baseUrl)\n  return req.then(res => res.data)\n}\n\nconst update = async (id, newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const res = await axios.put(`${baseUrl}/${id}`, newObject, config)\n  return res.data\n}\n\n\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const res = await axios.post(baseUrl, newObject, config)\n  return res.data\n}\n\n\n\nconst remove = async (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const res = axios.delete(`${baseUrl}/${id}`, config)\n  return res.data\n}\n\nexport default { getAll, create, update, setToken, nullToken, remove }","import stack from '../services/stack'\nimport { setNotification } from './notification'\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_STACKS':\n      return [...action.data]\n    case 'CREATE_STACK':\n      return [...state, action.data]\n    case 'REMOVE_STACK':\n      return [...state].filter(s => s.id !== action.data)\n    case 'UPDATE_STACK':\n      return [...state].map(s =>\n        s.id === action.data.id ? action.data : s\n      )\n    default:\n      return state\n  }\n}\n\nexport const removeStack = (currentStack) => {\n  return async dispatch => {\n    try {\n      await stack.remove(currentStack.id)\n\n      dispatch({\n        type: 'REMOVE_STACK',\n        data: currentStack.id\n      })\n\n      dispatch(setNotification(`${currentStack.stack} removed`, 5))\n\n    } catch (error) {\n      dispatch(setNotification(error.message, 5))\n    }\n  }\n}\n\nexport const createStackAndCard = (stackAndCard) => {\n  return async dispatch => {\n    try {\n      const data = await stack.create(stackAndCard)\n      dispatch({\n        type: \"CREATE_STACK\",\n        data\n      })\n\n      dispatch(setNotification(`${data.stack} created`, 5))\n    } catch (error) {\n      dispatch(setNotification(error.message, 5))\n    }\n  }\n}\n\nexport const updateStack = (currentStack, updatedCard) => {\n  return async dispatch => {\n    try {\n      const id = currentStack.id\n      const dataToServer = {\n        stack: currentStack.stack,\n        flashcard : {\n          hint: updatedCard.hint,\n          answer: updatedCard.answer,\n          plusses: updatedCard.plusses,\n          minuses: updatedCard.minuses\n        }\n      }\n      \n      const data = await stack.update(id, dataToServer)\n\n      dispatch({\n        type: \"UPDATE_STACK\",\n        data\n      })\n  \n      dispatch(setNotification(`${currentStack.stack} altered`, 5))\n\n    } catch (error) {\n      dispatch(setNotification(error.message, 5))\n    }\n  }\n}\n\nexport const renameStack = (updatedStack, oldName) => {\n  return async dispatch => {\n    try {\n      const data = await stack.update(updatedStack.id, updatedStack)\n      dispatch({\n        type: \"UPDATE_STACK\",\n        data\n      })\n      dispatch(setNotification(`${oldName} renamed to ${updatedStack.stack}`, 5))\n    } catch (error) {\n      dispatch(setNotification(error.message, 5))\n    }\n  }\n}\n\nexport const initStacks = (user) => {\n  return async dispatch => {\n    try {\n      const data = await stack.getAll()\n      if (user) {\n        dispatch({\n          type: 'INIT_STACKS',\n          data: data.filter(s => s.user.username === user.username)\n        })\n      }\n    } catch (error) {\n      dispatch(setNotification(error.message, 5))\n    }\n  }\n}\n\n\nexport default reducer","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async (credentials) => {\n  const res = await axios.post(baseUrl, credentials)\n  return res.data\n}\n\nexport default { login }","import stack from '../services/stack'\nimport login from '../services/login' \nimport { setNotification } from './notification'\n\nconst reducer = (state = null, action) => {\n  switch (action.type) {\n    case 'INIT':\n      return action.loggedUser\n    case 'LOGIN':\n      return { ...action.user }\n    case 'LOGOUT':\n      return null\n    default:\n      return state\n  }\n}\n\nexport const initUser = () => {\n  return async dispatch => {\n    const loggedUser = JSON.parse(window.localStorage.getItem('loggedUser'))\n    if (loggedUser) {\n      stack.setToken(loggedUser.token)\n      dispatch({\n        type: 'INIT',\n        loggedUser\n      })\n    }\n  }\n}\n\nexport const onLogOut = () => {\n  return async dispatch => {\n    window.localStorage.removeItem('loggedUser')\n    stack.nullToken()\n    dispatch({ type: 'LOGOUT' })\n  }\n}\n\nexport const onLogIn = loginData => {\n  return async dispatch => {\n    try {\n      const user = await login.login(loginData)\n      window.localStorage.setItem('loggedUser', JSON.stringify(user))\n      stack.setToken(user.token)\n      dispatch(\n        setNotification(\n          `User ${user.username} signed in successfully`, 5)\n      )\n      dispatch({\n        type: 'LOGIN',\n        user\n      })\n    } catch (error) {\n      dispatch(setNotification(error.message, 5))\n    }\n  }\n}\n\nexport default reducer","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport signUpReducer from './reducers/signUp'\nimport notificationReducer from './reducers/notification'\nimport stacksReducer from './reducers/stack'\nimport userReducer from './reducers/user'\n\n\nconst reducer = combineReducers({\n  user: userReducer,\n  signUpUser: signUpReducer,\n  stacks: stacksReducer,\n  notification: notificationReducer,\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store","// Code produced by create React app process\r\n\r\n// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}","// Component taken from https://stackoverflow.com/a/49439893\n\nimport React from 'react'\nimport { withRouter } from 'react-router'\nimport '../index.css'\n\nconst LinkButton = (props) => {\n  const {\n    history,\n    to,\n    onClick,\n    id,\n    className,\n    text,\n    type,\n  } = props\n  return (\n    <button\n    type={type}\n    id={id} className={className}\n    onClick={(event) => {\n        onClick && onClick(event)\n        history.push(to)\n      }}\n    >\n      {text}\n    </button>\n  )\n}\n\nexport default withRouter(LinkButton)","import React from 'react'\nimport '../index.css'\n\nconst Button = (props) => {\n  return (\n    <button onClick={props.handleClick}\n      id={props.id}\n      className={props.className}>\n      {props.text}\n    </button>\n  )\n}\n\nexport default Button","import React from 'react'\nimport '../index.css'\nimport { withRouter } from 'react-router'\n\nexport const H1 = () => {\n  return (\n      <h1 className=\"h1-heading\">Korts</h1>\n  )\n}\n\nconst H2Link = (props) => {\n  const {\n    history,\n    to,\n    onClick,\n  } = props\n  return (\n    <h2 className=\"h1-heading\"\n    onClick={(event) => {\n        onClick && onClick(event)\n        history.push(to)\n      }}\n    >Korts</h2>\n  )\n}\n\nconst H1Link = (props) => {\n  const {\n    history,\n    to,\n    onClick,\n  } = props\n  return (\n    <h1 className=\"h1-heading\"\n    onClick={(event) => {\n        onClick && onClick(event)\n        history.push(to)\n      }}\n    >Korts</h1>\n  )\n}\n\n\nexport const H1LinkExport = withRouter(H1Link)\nexport default withRouter(H2Link)\n","import React from 'react'\nimport LinkButton from '../LinkButton'\nimport Button from '../Button'\nimport H2Link from '../Headings'\nimport '../../index.css'\nimport { onLogOut } from '../../reducers/user'\nimport { useDispatch } from 'react-redux'\n\n\n\nconst TopContainer = (props) => {\n  const dispatch = useDispatch()\n  const handleLogout = () => {\n    dispatch(onLogOut())\n  }\n\n  return (\n    <div className=\"container-2\">\n      <H2Link to=\"/\"/>\n      {props.user ? \n        <Button className=\"pink-box-button\" text=\"Log Out\" handleClick={handleLogout}/> :\n        <LinkButton className=\"pink-box-button\" text=\"Log In\" to=\"/\"/>\n      }\n    </div>\n  )\n}\n\nexport default TopContainer\n","import React from 'react'\nimport '../../index.css'\nimport collections from '../Home/resources/collections.svg'\n\nconst MainContainer = () => {\n  return (\n    <div className=\"container-3\">\n      <article className=\"container-4\">\n        <p>\n          Korts is an application for managing flash cards. Users can create stacks by topics and add cards to them. To ensure card is learned, user is encouraged to vote plus every time he gets car's answer immediately right, and in every other case vote minus. This behaviour is enforced by the fact that only way to delete card is to vote plus three times. Users can switch between card view and stack list view by clicking the following navigation icon.\n          <img src={collections} alt=\"Icon not available\"></img>\n        </p>\n      </article>\n      </div>\n\n  )\n}\n\nexport default MainContainer","import React from 'react'\nimport '../index.css'\nimport LinkButton from './LinkButton'\n\nconst Footer = () => {\n\n  return (\n          <p className=\"footer\">\n            {new Date().getFullYear()} Korts |\n            <LinkButton className=\"text-button\" text=\"About\" to=\"/about\"/>\n          </p>\n  )\n}\n\nexport default Footer\n","import React from 'react'\r\nimport '../../index.css'\r\nimport TopContainer from './TopContainer'\r\nimport MainContainer from './MainContainer'\r\nimport Footer from '../Footer'\r\n\r\nconst AboutPage = (props) => {\r\n  return (\r\n    <div className=\"site-wrapper\">\r\n      <TopContainer user={props.user}/>\r\n      <main>\r\n        <MainContainer/>\r\n      </main>\r\n      <Footer/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AboutPage","import React from 'react'\nimport LinkButton from './LinkButton'\nimport PropTypes from 'prop-types'\nimport '../index.css'\n\nconst UserForm = ({\n  passwordHint,\n  usernameHint,\n  username,\n  password,\n  buttonText,\n  submitHandler,\n  usernameHandler,\n  passwordHandler\n}) => {\n  return (\n      <form onSubmit={submitHandler}>\n          <div >\n            <input\n            placeholder={usernameHint}\n            className=\"white-input\"\n            id=\"username\"\n              value={username}\n              onChange={usernameHandler}\n            />\n          </div>\n          <div>\n            <input\n              placeholder={passwordHint}\n              className=\"white-input\"\n              id=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={passwordHandler}\n            />\n          </div>\n        <LinkButton id=\"login-button\" text={buttonText} className=\"pink-box-button\"  type=\"submit\"/>\n      </form>\n  )\n}\n\nUserForm.propTypes = {\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n  submitHandler: PropTypes.func.isRequired,\n  usernameHandler: PropTypes.func.isRequired,\n  passwordHandler: PropTypes.func.isRequired\n\n}\n\nexport default UserForm","import React, { useState } from 'react'\nimport { H1LinkExport } from '../Headings'\nimport UserForm from '../UserForm'\nimport '../../index.css'\nimport { onSignUp } from '../../reducers/signUp'\nimport { useDispatch } from 'react-redux'\nimport { setNotification } from '../../reducers/notification'\n\nconst MainContainer = () => {\n  const dispatch = useDispatch()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleSignUp = async (event) => {\n    event.preventDefault()\n    try {\n      if (password.length < 3 || username.length < 3) {\n        throw new Error(\"Password's and username's minimum length is 3\")\n      }\n      dispatch(onSignUp({username, password}))\n      setUsername('')\n      setPassword('')\n    } catch (error) {\n        dispatch(setNotification(error.message, 5))\n    }\n  }\n\n  return (\n    <div className=\"form-container\">\n      <H1LinkExport  to=\"/\"/>\n      <UserForm\n        username={username}\n        password={password}\n        usernameHandler={({ target }) => setUsername(target.value)}\n        passwordHandler={({ target }) => setPassword(target.value)}\n        submitHandler={handleSignUp}\n        buttonText=\"Sign Up\"\n        to=\"/\"\n        usernameHint = \"Username (min. length 3)\"\n        passwordHint = \"Password (min. length 3)\"\n      />\n    </div>\n  )\n}\n\nexport default MainContainer","import React from 'react'\nimport '../index.css'\n\nconst Notification = ({ notification }) => {\n\n  if (!notification) {\n    return null\n  }\n  \n  return (\n    <div className=\"notification\">\n      {notification}\n    </div>\n  )\n}\n\nexport default Notification","import React from 'react'\r\nimport '../../index.css'\r\nimport MainContainer from './MainContainer'\r\nimport Notification from '../Notification'\r\nimport Footer from '../Footer'\r\n\r\nconst SignUpPage = (props) => {\r\n  return (\r\n    <div className=\"site-wrapper\">\r\n      <Notification notification={props.notification}/>\r\n      <main>\r\n        <MainContainer/>\r\n      </main>\r\n      <Footer/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUpPage","import React from 'react' \nimport '../../index.css'\nimport { setNewUserNull } from '../../reducers/signUp'\nimport { useDispatch } from 'react-redux'\nimport LinkButton from '../LinkButton'\n\nconst SignUp = () => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(setNewUserNull())\n  }\n  return (\n       <p className=\"text\">Don't have an account?\n       {\" \"}\n       <LinkButton className=\"pink-box-button\" onClick={handleClick} text=\"Sign up\" to=\"/signup\"/>\n      </p>\n   \n  )\n}\n\nexport default SignUp","import React, { useState } from 'react'\nimport { onLogIn } from '../../reducers/user'\nimport { setNewUserNull } from '../../reducers/signUp'\nimport { useDispatch } from 'react-redux'\nimport '../../index.css'\nimport { H1 } from '../Headings'\nimport UserForm from '../UserForm'\nimport SignUpLink from './SignUp'\nimport { setNotification } from '../../reducers/notification'\n\n\nconst MainContainer = () => {\n  const dispatch = useDispatch()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  \n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      if (password.length < 3 || username.length < 3) {\n        throw new Error(\"Password's and username's minimum length is 3\")\n      }\n      dispatch(setNewUserNull())\n      dispatch(onLogIn({username, password}))\n      setUsername('')\n      setPassword('')\n    } catch (error) {\n      dispatch(setNotification(error.message, 5))\n    }\n  }\n\n  return (\n      <div className=\"form-container\">\n      <H1/>\n      <UserForm\n        username={username}\n        password={password}\n        usernameHandler={({ target }) => setUsername(target.value)}\n        passwordHandler={({ target }) => setPassword(target.value)}\n        submitHandler={handleLogin}\n        buttonText=\"Log In\"\n        usernameHint = \"Username (min. length 3)\"\n        passwordHint = \"Password (min. length 3)\"\n      />\n      <SignUpLink/>\n    </div>\n    \n  )\n}\n\nexport default MainContainer","import React from 'react'\r\nimport '../../index.css'\r\nimport Footer from '../Footer'\r\nimport MainContainer from './MainContainer'\r\nimport Notification from '../Notification'\r\n\r\n\r\nconst LogInPage = (props) => {\r\n  return (\r\n    <div className=\"site-wrapper\">\r\n      <Notification notification={props.notification}/>\r\n      <main>\r\n        <MainContainer/>\r\n      </main>\r\n      <Footer/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LogInPage","import React from 'react'\nimport H2Link from '../Headings'\nimport Button from '../Button'\nimport '../../index.css'\nimport { onLogOut } from '../../reducers/user'\nimport { useDispatch } from 'react-redux'\n\nconst TopContainer = () => {\n\n  const dispatch = useDispatch()\n  const handleLogout = () => {\n    dispatch(onLogOut())\n  }\n\nreturn (\n  <div className=\"container-2\">\n    <H2Link to=\"/\" />\n    <Button className=\"pink-box-button\" text=\"Log Out\" handleClick={handleLogout}/>\n  </div>\n)\n}\n\nexport default TopContainer","import React from 'react'\r\nimport '../../index.css'\r\n\r\nconst Crud = (props) => {\r\n  return (\r\n    <div id=\"CRUD\">\r\n      <input\r\n        placeholder={props.getStackName(props.stackIndex)}\r\n        className=\"white-rename-input\"\r\n        id=\"collection-name\"\r\n        type=\"text\"\r\n        value={props.stackName}\r\n        onChange={({ target }) => props.setStackName(target.value)}\r\n      />\r\n      <button id=\"rename-button\" onClick={() => props.rename(props.stackName)}>Rename</button>\r\n      <div className=\"btn-group\">\r\n        <button onClick={() => props.createStack(props.cardHint, props.cardAnswer, props.stackName)}>Create Stack and Card</button>\r\n        <button onClick={() => props.addCardToStack(props.cardHint, props.cardAnswer)}>Add card to Stack</button>\r\n        <button onClick={props.deleteStack}>Delete Stack</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Crud","import React from 'react'\r\nimport '../../index.css'\r\n\r\nconst Card = (props) => {\r\n\r\n  const stopPropagation = (event) => {\r\n    event.stopPropagation();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {props.showAnswer === true ?\r\n        <div id=\"card\" onClick={props.flipCard}>\r\n          <p className=\"hint-ans\">Answer</p>\r\n          <input\r\n            onClick={stopPropagation}\r\n            placeholder={props.getCardInfo(props.cardIndex)}\r\n            className=\"white-card-input\"\r\n            id=\"card-info\"\r\n            type=\"text\"\r\n            value={props.cardAnswer}\r\n            onChange={({ target }) => props.setCardAnswer(target.value)}\r\n          />\r\n\r\n      </div>\r\n      :\r\n      <div id=\"card\" onClick={props.flipCard}>\r\n        <p className=\"hint-ans\">Hint</p>\r\n        <input\r\n          onClick={stopPropagation}\r\n          placeholder={props.getCardInfo(props.cardIndex)}\r\n          className=\"white-card-input\"\r\n          id=\"card-info\"\r\n          type=\"text\"\r\n          value={props.cardHint}\r\n          onChange={({ target }) => props.setCardHint(target.value)}\r\n        />\r\n\r\n      </div>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Card","import React from 'react'\r\nimport '../../index.css'\r\nimport collections from './resources/collections.svg'\r\n\r\nconst Collections = (props) => {\r\n  return (\r\n    <>\r\n      <img \r\n        src={collections}\r\n        alt=\"Click here to view collections\"\r\n        height=\"87\"\r\n        width=\"100\" \r\n        onClick={props.toggleRenderCollections}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Collections\r\n\r\n","import React from 'react'\r\nimport '../../index.css'\r\n\r\nconst Stacks = (props) => {\r\n  return (\r\n    <>\r\n      <ol>\r\n        {props.stacks.map(stack => \r\n          <li onClick={() => props.setStack(stack.stack)} key={stack.stack}>{stack.stack}</li>\r\n        )}\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Stacks","import React from 'react'\r\nimport '../../index.css'\r\n\r\nimport arrowRight from './resources/arrowRight.svg'\r\nimport arrowLeft from './resources/arrowLeft.svg'\r\nimport addPlus from './resources/add_plus.svg'\r\nimport addMinus from './resources/add_minus.svg'\r\n\r\nconst VoteNavigation = (props) => {\r\n  return (\r\n    <div id=\"vote-navigation\">\r\n      <img \r\n        src={arrowLeft}\r\n        alt=\"Click here for next card\"\r\n        height=\"87\"\r\n        width=\"100\"\r\n        onClick={props.previousCard}\r\n      />\r\n\r\n      <div id=\"vote\">\r\n        <img \r\n          src={addPlus}\r\n          alt=\"Click here to add plus\"\r\n          height=\"87\"\r\n          width=\"100\"\r\n          onClick={props.votePlus}\r\n        />\r\n        <p className=\"plusses-minuses\">{props.getPlusses()} * +</p>\r\n        <img \r\n          src={addMinus}\r\n          alt=\"Click here to add minus\"\r\n          height=\"87\"\r\n          width=\"100\"\r\n          onClick={props.voteMinus}\r\n        />\r\n        <p className=\"plusses-minuses\">{props.getMinuses()} * -</p>\r\n      </div>\r\n      \r\n      <img \r\n        src={arrowRight}\r\n        alt=\"Click here for next card\"\r\n        height=\"87\"\r\n        width=\"100\"\r\n        onClick={props.nextCard}\r\n      />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VoteNavigation","import React, { useState }  from 'react'\r\nimport '../../index.css'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setNotification } from '../../reducers/notification'\r\n\r\nimport { updateStack, createStackAndCard, renameStack, removeStack } from '../../reducers/stack'\r\nimport Crud from './Crud'\r\nimport Card from './Card'\r\nimport Collections from './Collections'\r\nimport Stacks from './Stacks'\r\nimport VoteNavigation from './VoteNavigation'\r\n\r\nconst MainContainer = (props) => {\r\n  const dispatch = useDispatch()\r\n  const [stackIndex, setStackIndex] = useState(0)\r\n  const [cardIndex, setCardIndex] = useState(0)\r\n  const [renderStacks, setRenderStacks] = useState(false)\r\n  const [showAnswer, setShowAnswer] = useState(false)\r\n  const [stackName, setStackName] = useState('')\r\n  const [cardHint, setCardHint] = useState('')\r\n  const [cardAnswer, setCardAnswer] = useState('')\r\n  \r\n  const getStackName = (index) => {\r\n    if (props.stacks.length > 0) {\r\n      const i = index === null ? 0 : index\r\n      try {\r\n        return props.stacks[i].stack\r\n      } catch (error) {\r\n        return props.stacks[0].stack\r\n      }\r\n    }\r\n  }\r\n\r\n  const getStack = (i) => props.stacks.find(s => s.stack === getStackName(i))\r\n\r\n  const getCardInfo = (index) => {\r\n    const currentStack = getStack(stackIndex)\r\n    if (currentStack) {\r\n      const i = index === null ? 0 : index \r\n      try {\r\n        if (showAnswer) {\r\n          return currentStack.flashcards[i].answer\r\n        } else {\r\n          return currentStack.flashcards[i].hint\r\n        }\r\n      } catch (error) {\r\n        setCardIndex(0)\r\n      }\r\n      \r\n    }\r\n  }\r\n\r\n  const deleteStack = () => {\r\n    try {\r\n      const currentStack = getStack(stackIndex)\r\n      dispatch(removeStack(currentStack))\r\n    } catch (error) {\r\n      dispatch(setNotification(error.message, 5))\r\n    }\r\n  }\r\n\r\n  const addCardToStack = (cardHint, cardAnswer) => {\r\n    try {\r\n      const currentStack = getStack(stackIndex)\r\n\r\n      if (cardHint === '' || cardAnswer === '') {\r\n        throw new Error(\"Provide hint and answer\")\r\n      } else {\r\n        const newCard = {...currentStack.flashcards[cardIndex], hint: cardHint, answer: cardAnswer, plusses: 0, minuses: 0}\r\n        dispatch(updateStack(currentStack, newCard))\r\n      }\r\n      setCardAnswer('')\r\n      setCardHint('')\r\n      setStackName('')\r\n    } catch (error) {\r\n      dispatch(setNotification(error.message, 5))\r\n    }\r\n  }\r\n\r\n  const createStack = (cardHint, cardAnswer, stackName) => {\r\n    try {\r\n\r\n      if (cardHint === '' && cardAnswer === '') {\r\n        throw new Error('Provide hint and/or answer')\r\n      } \r\n\r\n      if (stackName === '') {\r\n        throw new Error('Provide stack name')\r\n      }\r\n\r\n      const newStack = {\r\n        stack: stackName,\r\n        flashcard: {\r\n          hint: cardHint,\r\n          answer: cardAnswer,\r\n          plusses: 0,\r\n          minuses: 0\r\n        }\r\n      }\r\n\r\n      dispatch(createStackAndCard(newStack))\r\n      setCardAnswer('')\r\n      setCardHint('')\r\n      setStackName('')\r\n    } catch (error) {\r\n      dispatch(setNotification(error.message, 5))\r\n    }\r\n  }\r\n\r\n  const rename = (stackName) => {\r\n    try {\r\n      if (stackName === '') {\r\n        throw new Error(\"Provide stack name\")\r\n      }\r\n      if (props.stacks) {\r\n        let duplicatesExist = false\r\n        for (let i = 0; i < props.stacks.length; i++) {\r\n          if (props.stacks[i].stack === stackName) {\r\n            duplicatesExist = true\r\n            break\r\n          }\r\n        }\r\n        if (duplicatesExist) {\r\n          throw new Error('Provide unique stack name')\r\n        }\r\n      }\r\n\r\n      const currentStack = getStack(stackIndex)\r\n      const updatedStack = {...currentStack, stack: stackName}\r\n      dispatch(renameStack(updatedStack, currentStack.stack))\r\n      setStackName('')\r\n    } catch (error) {\r\n      dispatch(setNotification(error.message, 5))\r\n    }\r\n  }\r\n\r\n  const toggleRenderCollections = () => {\r\n    renderStacks ? setRenderStacks(false)\r\n    : setRenderStacks(true)\r\n  }\r\n\r\n  const previousCard = () => {\r\n    if (showAnswer) {\r\n      setShowAnswer(false)\r\n    }\r\n    setCardIndex(cardIndex - 1)\r\n  }\r\n\r\n  const nextCard = () => {\r\n    if (showAnswer) {\r\n      setShowAnswer(false)\r\n    }\r\n    setCardIndex(cardIndex + 1)\r\n  }\r\n\r\n\r\n\r\n  const flipCard = () => {\r\n    showAnswer ? setShowAnswer(false)\r\n    : setShowAnswer(true)\r\n  }\r\n\r\n  const getPlusses = () => {\r\n    const currentStack = getStack(stackIndex)\r\n    try {\r\n      return currentStack.flashcards[cardIndex].plusses\r\n    } catch (error) {\r\n      return \"Not available\"\r\n    }\r\n  }\r\n\r\n  const getMinuses = () => {\r\n    const currentStack = getStack(stackIndex)\r\n    try {\r\n      return currentStack.flashcards[cardIndex].minuses\r\n    } catch (error) {\r\n      return \"Not available\"\r\n    }\r\n  }\r\n\r\n  const voteMinus = () => {\r\n    try {\r\n      const currentStack = getStack(stackIndex)\r\n      currentStack.flashcards[cardIndex].minuses += 1\r\n      const updatedCard = currentStack.flashcards[cardIndex]\r\n      dispatch(updateStack(currentStack, updatedCard))\r\n    } catch (error) {\r\n      dispatch(setNotification(`Cannot vote before card is loaded`, 5))\r\n    }\r\n\r\n  }\r\n\r\n  const votePlus = () => {\r\n    try {\r\n      const currentStack = getStack(stackIndex)\r\n      currentStack.flashcards[cardIndex].plusses += 1\r\n      const updatedCard = currentStack.flashcards[cardIndex]\r\n      dispatch(updateStack(currentStack, updatedCard))\r\n    } catch (error) {\r\n      dispatch(setNotification(`Cannot vote before card is loaded`, 5))\r\n    }\r\n\r\n  }\r\n\r\n  const setStack = (stack) => {\r\n    try {\r\n        setStackIndex(props.stacks.findIndex(s => s.stack === stack))\r\n        setRenderStacks(false)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n\r\n  }\r\n\r\n  if (renderStacks) {\r\n    return (\r\n      <div className=\".container-1\">\r\n        {props.stacks.length >= 1 ?\r\n          <Stacks stacks={props.stacks} setStack={setStack}/> :\r\n          <p>Not available</p>\r\n        }\r\n        <Collections toggleRenderCollections={toggleRenderCollections}/>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  return (\r\n    <div className=\".container-1\">\r\n      <Crud getStackName={getStackName} stackIndex={stackIndex} setStackName={setStackName} \r\n        rename={rename} createStack={createStack} addCardToStack={addCardToStack}\r\n        stackName={stackName} cardHint={cardHint} cardAnswer={cardAnswer} deleteStack={deleteStack}\r\n      />\r\n      <Card\r\n        showAnswer={showAnswer} flipCard={flipCard} getCardInfo={getCardInfo}\r\n        cardAnswer={cardAnswer} setCardAnswer={setCardAnswer} cardHint={cardHint} \r\n        setCardHint={setCardHint} cardIndex={cardIndex}\r\n      />\r\n      <VoteNavigation previousCard={previousCard} nextCard={nextCard} \r\n        votePlus={votePlus} voteMinus={voteMinus} getPlusses={getPlusses} getMinuses={getMinuses}\r\n      />\r\n      <Collections toggleRenderCollections={toggleRenderCollections}/>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default MainContainer","import React from 'react'\r\nimport '../../index.css'\r\nimport Notification from '../Notification'\r\nimport TopContainer from './TopContainer'\r\nimport Footer from '../Footer'\r\nimport MainContainer from './MainContainer'\r\n\r\nconst HomePage = (props) => {\r\n  \r\n  return (\r\n    <div className=\"site-wrapper\">\r\n      <Notification notification={props.notification}/>\r\n      <TopContainer />\r\n      <main>\r\n        <MainContainer stacks={props.stacks}/>\r\n      </main>\r\n      <Footer/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomePage\r\n \r\n","import React, { useEffect } from 'react'\nimport './index.css'\n\nimport {\n  HashRouter  as Router,\n  Switch, Route, Redirect\n} from \"react-router-dom\"\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { initUser} from './reducers/user'\nimport { initStacks} from './reducers/stack'\n\nimport AboutPage from './components//About/AboutPage'\nimport SignUpPage from './components/SignUp/SignUpPage'\nimport LogInPage from './components/LogIn/LogInPage'\nimport HomePage from './components/Home/HomePage'\n\nconst App = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(initUser())\n  }, [dispatch])\n\n  const user = useSelector(state => state.user)\n\n  useEffect(() => {\n    dispatch(initStacks(user))\n  }, [dispatch, user])\n  \n  const signUpUser = useSelector(state => state.signUpUser)\n  const notification = useSelector(state => state.notification)\n  const stacks = useSelector(state => state.stacks)\n\n  return (\n      <>\n          <Router>\n            <Switch>\n            \n              <Route path=\"/signup\">\n                {signUpUser ? <Redirect to=\"/\"/> : <SignUpPage notification={notification}/>}\n              </Route>\n\n              <Route path=\"/about\">\n                <AboutPage  user={user}/>\n              </Route>\n\n              <Route path=\"/\">\n                {user === null ?\n                  <LogInPage notification={notification}/> :\n                  <HomePage user={user} notification={notification} stacks={stacks}/>\n                }\n              </Route>\n\n            </Switch>\n          </Router>\n        </>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport registerServiceWorker from './registerServiceWorker'\nimport App from './App'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\nregisterServiceWorker()"],"sourceRoot":""}